#!/usr/bin/env node

var pathExtra = require('path-extra');
var program = require('commander');

var cozyLight = require('../lib/cozy-light');
var actions = cozyLight.actions;

var pkg = require('../package.json');


// Configure CLI

program
  .version(pkg.version);

program
  .option('--home <home>',
  'home directory where Cozy Light runs (default: ~/.cozy-light)');


// Initialize Cozy

program.parse(process.argv);
cozyLight.init(program);


program
  .command('start')
  .option('-p, --port <port>',
          'port number on which Cozy Light is available')
  .description('start Cozy Light server')
  .action(actions.start);

program
  .command('install <app>')
  .description('Add app to current Cozy Light')
  .action(actions.installApp);

program
  .command('uninstall <app>')
  .description('Remove app from current Cozy Light')
  .action(actions.uninstallApp);

program
  .command('add-plugin <plugin>')
  .description('Add plugin to current Cozy Light')
  .action(actions.installPlugin);

program
  .command('remove-plugin <plugin>')
  .description('Remove plugin from current Cozy Light')
  .action(actions.uninstallPlugin);

program
  .command('display-config')
  .description('Display current config of Cozy Light')
  .action(actions.displayConfig);

program
  .command('disable <apporplugin>')
  .description('Disable given app or plugin')
  .action(actions.disable);

program
  .command('enable <apporplugin>')
  .description('Enable given disabled app or plugin')
  .action(actions.enable);

program
  .command('install-distro <distro>')
  .description(
    'Install given distro. If none is give, it displays the distro list')
  .action(actions.installDistro);

program
  .command('*')
  .description('display help')
  .action(function(){
        program.outputHelp();
        cozyLight.stop(cozyLight.exit);
    });

// Run CLI

program.parse(process.argv);

// If arguments doesn't match any of the one set, it displays help.

if (!process.argv.slice(2).length) {
  program.outputHelp();
}

// Manage errors

process.on('uncaughtException', function(err){
  if (err) {
    cozyLight.logger.warn('An exception is uncaught');
    cozyLight.logger.raw(err);
    cozyLight.logger.raw(err.stack);
  }
  cozyLight.stop(cozyLight.exit);
});

// Manage termination

process.on('SIGINT', function(){
    cozyLight.stop(cozyLight.exit);
});
